import"./modulepreload-polyfill-B5Qt9EMX.js";import{p as C,r as T}from"./topBar-DJwU6RwO.js";const d="https://www.relda.com.br",k=JSON.parse(localStorage.getItem("userData"));document.addEventListener("DOMContentLoaded",()=>{C("movimentacoes"),T("movimentacoes",k.permissions_list)});const E=document.getElementById("income-modal"),I=document.getElementById("delete-modal"),D=document.getElementById("add-income-header-btn"),_=document.getElementById("add-income-fab-btn"),L=document.getElementById("income-form"),u=document.getElementById("income-table-body"),b=document.getElementById("total-income-summary"),x=document.getElementById("income-category"),v=document.getElementById("income-account"),p=document.getElementById("toast-notification"),N=document.getElementById("toast-message");let m=null,y=null,g=null;const l=e=>parseFloat(e).toLocaleString("pt-BR",{style:"currency",currency:"BRL"}),w=e=>{const[a,n,c]=e.split("-");return`${c}/${n}/${a}`};function r(e,a="success"){const n=a==="success"?"bg-green-500":"bg-red-600";p.className=`fixed bottom-5 right-5 px-5 py-3 rounded-lg shadow-lg text-white transition-opacity duration-300 ${n}`,N.textContent=e,p.classList.remove("hidden"),setTimeout(()=>{p.classList.add("hidden")},3e3)}function B(e){const a=e.reduce((o,s)=>{const i=s.category_name||"Sem Categoria";return o[i]=(o[i]||0)+parseFloat(s.amount),o},{}),n=e.reduce((o,s)=>{const i=s.bank_account_name||"Conta Deletada";return o[i]=(o[i]||0)+parseFloat(s.amount),o},{});y&&y.destroy(),g&&g.destroy();const c=document.getElementById("income-by-category-chart").getContext("2d");y=new Chart(c,{type:"doughnut",data:{labels:Object.keys(a),datasets:[{data:Object.values(a),backgroundColor:["#10B981","#3B82F6","#F59E0B","#6366F1","#EF4444"]}]},options:{responsive:!0,maintainAspectRatio:!1}});const t=document.getElementById("income-by-account-chart").getContext("2d");g=new Chart(t,{type:"bar",data:{labels:Object.keys(n),datasets:[{label:"Total Recebido",data:Object.values(n),backgroundColor:"#8B5CF6"}]},options:{responsive:!0,maintainAspectRatio:!1,indexAxis:"y"}})}async function F(){try{const[e,a]=await Promise.all([fetch(`${d}/api/finance/categories/?type=entrada`,{credentials:"include"}),fetch(`${d}/api/finance/bank-accounts/`,{credentials:"include"})]);if(e.status===401||a.status===401){window.location.href="login.html";return}const n=await e.json(),c=await a.json();x.innerHTML='<option value="">Selecione a Categoria</option>',n.forEach(t=>{x.innerHTML+=`<option value="${t.id}">${t.name}</option>`}),v.innerHTML='<option value="">Selecione a Conta</option>',c.filter(t=>t.is_active).forEach(t=>{v.innerHTML+=`<option value="${t.id}">${t.name}</option>`})}catch{r("Erro ao carregar dados.","error")}}async function f(){await F();try{const e=await fetch(`${d}/api/finance/transactions/?type=entrada`,{credentials:"include"});if(e.status===401){window.location.href="login.html";return}if(!e.ok)throw new Error("Falha ao buscar entradas.");const a=await e.json(),n=document.getElementById("income-list-mobile");if(u.innerHTML="",n.innerHTML="",a.length===0){const t='<tr><td colspan="6" class="text-center py-4 text-gray-500">Nenhuma entrada registrada.</td></tr>';u.innerHTML=t,n.innerHTML='<p class="text-center py-4 text-gray-500">Nenhuma entrada registrada.</p>',b.textContent=l(0),B([]);return}const c=a.reduce((t,o)=>t+parseFloat(o.amount),0);b.textContent=l(c),a.forEach(t=>{const o=document.createElement("tr");o.innerHTML=`
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${w(t.transaction_date)}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${t.description}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${t.category_name||"N/A"}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${t.bank_account_name||"N/A"}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-green-600 font-semibold">${l(t.amount)}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <button onclick="openEditModal(${t.id})" class="text-blue-600 hover:text-blue-800 mr-3"><i class="fas fa-edit"></i></button>
                        <button onclick="openDeleteModal(${t.id})" class="text-red-500 hover:text-red-700"><i class="fas fa-trash-alt"></i></button>
                    </td>
                `,u.appendChild(o);const s=document.createElement("div");s.className="p-4 border-b border-gray-200",s.innerHTML=`
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="font-semibold text-gray-800">${t.description}</p>
                            <p class="text-sm text-gray-500">${t.category_name||"N/A"}</p>
                            <p class="text-xs text-gray-400 mt-1">${w(t.transaction_date)}</p>
                        </div>
                        <div class="text-right">
                            <p class="font-bold text-green-600">${l(t.amount)}</p>
                            <div class="mt-2">
                                <button onclick="openEditModal(${t.id})" class="text-blue-600 hover:text-blue-800 mr-2"><i class="fas fa-edit"></i></button>
                                <button onclick="openDeleteModal(${t.id})" class="text-red-500 hover:text-red-700"><i class="fas fa-trash-alt"></i></button>
                            </div>
                        </div>
                    </div>
                `,n.appendChild(s)}),B(a)}catch(e){r(e.message,"error")}}function $(){L.reset(),document.getElementById("modal-title").textContent="Adicionar Nova Entrada",document.getElementById("transaction-id").value="",E.classList.remove("hidden")}async function H(e){const n=await(await fetch(`${d}/api/finance/transactions/${e}/`,{credentials:"include"})).json();document.getElementById("modal-title").textContent="Editar Entrada",document.getElementById("transaction-id").value=n.id,document.getElementById("income-description").value=n.description,document.getElementById("income-amount").value=n.amount,document.getElementById("income-date").value=n.transaction_date,document.getElementById("income-category").value=n.category,document.getElementById("income-account").value=n.bank_account,E.classList.remove("hidden")}function h(){E.classList.add("hidden")}async function S(e){e.preventDefault();const a=document.getElementById("transaction-id").value,n={description:document.getElementById("income-description").value,amount:document.getElementById("income-amount").value,transaction_date:document.getElementById("income-date").value,category:document.getElementById("income-category").value,bank_account:document.getElementById("income-account").value,type:"entrada"},c=a?`${d}/api/finance/transactions/${a}/`:`${d}/api/finance/transactions/`,t=a?"PUT":"POST";try{if(!(await fetch(c,{method:t,headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(n)})).ok)throw new Error("Erro ao salvar a entrada.");r(a?"Entrada atualizada com sucesso!":"Entrada adicionada com sucesso!"),h(),f()}catch(o){r(o.message,"error")}}function j(e){m=e,I.classList.remove("hidden")}function M(){m=null,I.classList.add("hidden")}async function A(){if(m)try{if((await fetch(`${d}/api/finance/transactions/${m}/`,{method:"DELETE",credentials:"include"})).status!==204)throw new Error("Erro ao excluir a entrada.");r("Entrada exclu√≠da com sucesso!"),M(),f()}catch(e){r(e.message,"error")}}window.openEditModal=H;window.openDeleteModal=j;document.addEventListener("DOMContentLoaded",f);D.addEventListener("click",$);_.addEventListener("click",$);L.addEventListener("submit",S);document.getElementById("close-modal-btn").addEventListener("click",h);document.getElementById("cancel-btn").addEventListener("click",h);document.getElementById("confirm-delete-btn").addEventListener("click",A);document.getElementById("cancel-delete-btn").addEventListener("click",M);
